#include <sys/epoll.h>

#define FIND_AND_CHECK(e, i, max, fd) {e = NULL;        \
  for (i = 0;i <= max;i++) {\
    if ((evs->events[i]).fd == fd) {e = &evs->events[i]; break;}}\
  if (e == NULL) return FALSE;}


typedef struct _ev_api {
  int epfd;
  struct epoll_event events[EV_SIZE];
}ev_api;

int ev_create_api(events_t *evs) {
  ev_api *api = (ev_api*)malloc(sizeof(ev_api));

  if (api == NULL) return -1;
  api->epfd = epoll_create(1024);
  if (api->epfd == -1) return -1;
  evs->tag = api;
  return 0;
}

void ev_delete_api(events_t *evs) {
  ev_api *api = evs->tag;

  close(api->epfd);
  free(api);
  evs->tag = NULL;
}

int ev_create_event_api(events_t *evs, int fd, int mask) {
  ev_api *api = evs->tag;
  struct epoll_event ee;
  
 
}
